    @model IEnumerable<Ontrack.Models.Class>

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Teacher's Landing Page - Student Progress</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <style>
            body {
                background-color: #f8f9fa;
            }

            .container {
                max-width: 1000px;
                margin-top: 30px;
            }

            .class-section {
                margin-bottom: 20px;
            }

            .class-header {
                font-weight: bold;
                background-color: #007bff;
                color: white;
                padding: 10px;
                border-radius: 5px 5px 0 0;
                cursor: pointer;
            }

            .class-content {
                display: none;
                padding: 10px;
                border: 1px solid #007bff;
                border-radius: 0 0 5px 5px;
                background-color: white;
            }

            table {
                width: 100%;
            }

            th, td {
                text-align: left;
                padding: 8px;
            }

            th {
                background-color: #007bff;
                color: white;
            }

            .month-dropdown {
                margin-bottom: 20px;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2 class="text-center">Teacher's Landing Page</h2>
            <p class="text-center">Class and Student Progress Overview</p>

            <!-- Month Dropdown -->
            <div class="month-dropdown">
                <label for="month-select">Select Month:</label>
                <select class="form-select" id="month-select"></select>
            </div>

            <!-- Class Sections -->
            @foreach (var classItem in Model)
            {
                <div class="class-section">
                    <div class="class-header" onclick="toggleClassSection(@classItem.ClassID)">Class: @classItem.ClassName</div>
                    <div class="class-content" id="class-content-@classItem.ClassID">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Student Name</th>
                                    <th>Grades</th>
                                    <th>Attendance</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (classItem.Students != null && classItem.Students.Any())
                                {
                                    foreach (var student in classItem.Students)
                                    {
                                        <tr>
                                            <td>@student.FullName</td>

                                            <!-- Grades Section -->
                                            <td>
    @if (student.StudentExamsResult != null && student.StudentExamsResult.Any())
    {
        <ul class="list-unstyled">
            @foreach (var result in student.StudentExamsResult) 
            {
                @if (result.Examination != null)
                {
                    <!-- Only displaying the score, like in Student Details -->
                    <li>@result.Score</li>
                }
                else
                {
                    <li>Exam data not available</li>
                }
            }
        </ul>
    }
    else
    {
        <p>No exam results found for this student.</p>
    }
</td>


                                            <!-- Attendance Section -->
                                            <td>
                                                @if (student.Attendances != null && student.Attendances.Any())
                                                {
                                                    @foreach (var attendance in student.Attendances)
                                                    {
                                                        <div>@attendance.Date.ToString("dd MMM yyyy") - @(attendance.IsPresent ? "Present" : "Absent")</div>
                                                    }
                                                }
                                                else
                                                {
                                                    <p>No attendance records found for this student.</p>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3">No students found for this class.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>

        <script>
            // Toggle display of class sections
            function toggleClassSection(classId) {
                const content = document.getElementById(`class-content-${classId}`);
                content.style.display = content.style.display === 'none' || content.style.display === '' ? 'block' : 'none';
            }

            // Populate month dropdown with last 6 months
            async function populateMonthDropdown() {
                const monthSelect = document.getElementById("month-select");
                const currentDate = new Date();
                const options = { year: 'numeric', month: 'long' };

                for (let i = 0; i < 6; i++) {
                    const monthDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - i);
                    const option = document.createElement("option");
                    option.text = monthDate.toLocaleDateString("en-US", options);
                    option.value = monthDate.toISOString().substring(0, 7); // Format: yyyy-mm
                    monthSelect.appendChild(option);
                }
            }

            // Load dropdown on window load
            window.onload = populateMonthDropdown;
        </script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    </body>
    </html>
